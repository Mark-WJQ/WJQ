<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wjq.order.dao.mobile_card.MccConsumeRepaymentMapper">
  <resultMap id="BaseResultMap" type="com.wjq.order.model.mobile_card.MccConsumeRepayment">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="history_is_overdue" jdbcType="INTEGER" property="historyIsOverdue" />
    <result column="overdue_amount" jdbcType="DECIMAL" property="overdueAmount" />
    <result column="overdue_day" jdbcType="INTEGER" property="overdueDay" />
    <result column="periods" jdbcType="INTEGER" property="periods" />
    <result column="real_amount" jdbcType="DECIMAL" property="realAmount" />
    <result column="remain_amount" jdbcType="DECIMAL" property="remainAmount" />
    <result column="should_amount" jdbcType="DECIMAL" property="shouldAmount" />
    <result column="should_date" jdbcType="DATE" property="shouldDate" />
    <result column="repayment_status" jdbcType="INTEGER" property="repaymentStatus" />
    <result column="consume_id" jdbcType="BIGINT" property="consumeId" />
    <result column="end_date" jdbcType="TIMESTAMP" property="endDate" />
    <result column="play_status_id" jdbcType="INTEGER" property="playStatusId" />
    <result column="capital_notify_status" jdbcType="TINYINT" property="capitalNotifyStatus" />
    <result column="third_notify_status" jdbcType="TINYINT" property="thirdNotifyStatus" />
    <result column="cut_amount" jdbcType="DECIMAL" property="cutAmount" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, history_is_overdue, overdue_amount, overdue_day, periods, real_amount, remain_amount, 
    should_amount, should_date, repayment_status, consume_id, end_date, play_status_id, 
    capital_notify_status, third_notify_status, cut_amount
  </sql>
  <select id="selectByExample" parameterType="com.wjq.order.model.mobile_card.MccConsumeRepaymentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from mobile_card..mcc_consume_repayment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from mobile_card..mcc_consume_repayment
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from mobile_card..mcc_consume_repayment
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.wjq.order.model.mobile_card.MccConsumeRepaymentExample">
    delete from mobile_card..mcc_consume_repayment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.wjq.order.model.mobile_card.MccConsumeRepayment">
    insert into mobile_card..mcc_consume_repayment (id, history_is_overdue, overdue_amount, 
      overdue_day, periods, real_amount, 
      remain_amount, should_amount, should_date, 
      repayment_status, consume_id, end_date, 
      play_status_id, capital_notify_status, third_notify_status, 
      cut_amount)
    values (#{id,jdbcType=BIGINT}, #{historyIsOverdue,jdbcType=INTEGER}, #{overdueAmount,jdbcType=DECIMAL}, 
      #{overdueDay,jdbcType=INTEGER}, #{periods,jdbcType=INTEGER}, #{realAmount,jdbcType=DECIMAL}, 
      #{remainAmount,jdbcType=DECIMAL}, #{shouldAmount,jdbcType=DECIMAL}, #{shouldDate,jdbcType=DATE}, 
      #{repaymentStatus,jdbcType=INTEGER}, #{consumeId,jdbcType=BIGINT}, #{endDate,jdbcType=TIMESTAMP}, 
      #{playStatusId,jdbcType=INTEGER}, #{capitalNotifyStatus,jdbcType=TINYINT}, #{thirdNotifyStatus,jdbcType=TINYINT}, 
      #{cutAmount,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.wjq.order.model.mobile_card.MccConsumeRepayment">
    insert into mobile_card..mcc_consume_repayment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="historyIsOverdue != null">
        history_is_overdue,
      </if>
      <if test="overdueAmount != null">
        overdue_amount,
      </if>
      <if test="overdueDay != null">
        overdue_day,
      </if>
      <if test="periods != null">
        periods,
      </if>
      <if test="realAmount != null">
        real_amount,
      </if>
      <if test="remainAmount != null">
        remain_amount,
      </if>
      <if test="shouldAmount != null">
        should_amount,
      </if>
      <if test="shouldDate != null">
        should_date,
      </if>
      <if test="repaymentStatus != null">
        repayment_status,
      </if>
      <if test="consumeId != null">
        consume_id,
      </if>
      <if test="endDate != null">
        end_date,
      </if>
      <if test="playStatusId != null">
        play_status_id,
      </if>
      <if test="capitalNotifyStatus != null">
        capital_notify_status,
      </if>
      <if test="thirdNotifyStatus != null">
        third_notify_status,
      </if>
      <if test="cutAmount != null">
        cut_amount,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="historyIsOverdue != null">
        #{historyIsOverdue,jdbcType=INTEGER},
      </if>
      <if test="overdueAmount != null">
        #{overdueAmount,jdbcType=DECIMAL},
      </if>
      <if test="overdueDay != null">
        #{overdueDay,jdbcType=INTEGER},
      </if>
      <if test="periods != null">
        #{periods,jdbcType=INTEGER},
      </if>
      <if test="realAmount != null">
        #{realAmount,jdbcType=DECIMAL},
      </if>
      <if test="remainAmount != null">
        #{remainAmount,jdbcType=DECIMAL},
      </if>
      <if test="shouldAmount != null">
        #{shouldAmount,jdbcType=DECIMAL},
      </if>
      <if test="shouldDate != null">
        #{shouldDate,jdbcType=DATE},
      </if>
      <if test="repaymentStatus != null">
        #{repaymentStatus,jdbcType=INTEGER},
      </if>
      <if test="consumeId != null">
        #{consumeId,jdbcType=BIGINT},
      </if>
      <if test="endDate != null">
        #{endDate,jdbcType=TIMESTAMP},
      </if>
      <if test="playStatusId != null">
        #{playStatusId,jdbcType=INTEGER},
      </if>
      <if test="capitalNotifyStatus != null">
        #{capitalNotifyStatus,jdbcType=TINYINT},
      </if>
      <if test="thirdNotifyStatus != null">
        #{thirdNotifyStatus,jdbcType=TINYINT},
      </if>
      <if test="cutAmount != null">
        #{cutAmount,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.wjq.order.model.mobile_card.MccConsumeRepaymentExample" resultType="java.lang.Long">
    select count(*) from mobile_card..mcc_consume_repayment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update mobile_card..mcc_consume_repayment
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.historyIsOverdue != null">
        history_is_overdue = #{record.historyIsOverdue,jdbcType=INTEGER},
      </if>
      <if test="record.overdueAmount != null">
        overdue_amount = #{record.overdueAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.overdueDay != null">
        overdue_day = #{record.overdueDay,jdbcType=INTEGER},
      </if>
      <if test="record.periods != null">
        periods = #{record.periods,jdbcType=INTEGER},
      </if>
      <if test="record.realAmount != null">
        real_amount = #{record.realAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.remainAmount != null">
        remain_amount = #{record.remainAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.shouldAmount != null">
        should_amount = #{record.shouldAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.shouldDate != null">
        should_date = #{record.shouldDate,jdbcType=DATE},
      </if>
      <if test="record.repaymentStatus != null">
        repayment_status = #{record.repaymentStatus,jdbcType=INTEGER},
      </if>
      <if test="record.consumeId != null">
        consume_id = #{record.consumeId,jdbcType=BIGINT},
      </if>
      <if test="record.endDate != null">
        end_date = #{record.endDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.playStatusId != null">
        play_status_id = #{record.playStatusId,jdbcType=INTEGER},
      </if>
      <if test="record.capitalNotifyStatus != null">
        capital_notify_status = #{record.capitalNotifyStatus,jdbcType=TINYINT},
      </if>
      <if test="record.thirdNotifyStatus != null">
        third_notify_status = #{record.thirdNotifyStatus,jdbcType=TINYINT},
      </if>
      <if test="record.cutAmount != null">
        cut_amount = #{record.cutAmount,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update mobile_card..mcc_consume_repayment
    set id = #{record.id,jdbcType=BIGINT},
      history_is_overdue = #{record.historyIsOverdue,jdbcType=INTEGER},
      overdue_amount = #{record.overdueAmount,jdbcType=DECIMAL},
      overdue_day = #{record.overdueDay,jdbcType=INTEGER},
      periods = #{record.periods,jdbcType=INTEGER},
      real_amount = #{record.realAmount,jdbcType=DECIMAL},
      remain_amount = #{record.remainAmount,jdbcType=DECIMAL},
      should_amount = #{record.shouldAmount,jdbcType=DECIMAL},
      should_date = #{record.shouldDate,jdbcType=DATE},
      repayment_status = #{record.repaymentStatus,jdbcType=INTEGER},
      consume_id = #{record.consumeId,jdbcType=BIGINT},
      end_date = #{record.endDate,jdbcType=TIMESTAMP},
      play_status_id = #{record.playStatusId,jdbcType=INTEGER},
      capital_notify_status = #{record.capitalNotifyStatus,jdbcType=TINYINT},
      third_notify_status = #{record.thirdNotifyStatus,jdbcType=TINYINT},
      cut_amount = #{record.cutAmount,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.wjq.order.model.mobile_card.MccConsumeRepayment">
    update mobile_card..mcc_consume_repayment
    <set>
      <if test="historyIsOverdue != null">
        history_is_overdue = #{historyIsOverdue,jdbcType=INTEGER},
      </if>
      <if test="overdueAmount != null">
        overdue_amount = #{overdueAmount,jdbcType=DECIMAL},
      </if>
      <if test="overdueDay != null">
        overdue_day = #{overdueDay,jdbcType=INTEGER},
      </if>
      <if test="periods != null">
        periods = #{periods,jdbcType=INTEGER},
      </if>
      <if test="realAmount != null">
        real_amount = #{realAmount,jdbcType=DECIMAL},
      </if>
      <if test="remainAmount != null">
        remain_amount = #{remainAmount,jdbcType=DECIMAL},
      </if>
      <if test="shouldAmount != null">
        should_amount = #{shouldAmount,jdbcType=DECIMAL},
      </if>
      <if test="shouldDate != null">
        should_date = #{shouldDate,jdbcType=DATE},
      </if>
      <if test="repaymentStatus != null">
        repayment_status = #{repaymentStatus,jdbcType=INTEGER},
      </if>
      <if test="consumeId != null">
        consume_id = #{consumeId,jdbcType=BIGINT},
      </if>
      <if test="endDate != null">
        end_date = #{endDate,jdbcType=TIMESTAMP},
      </if>
      <if test="playStatusId != null">
        play_status_id = #{playStatusId,jdbcType=INTEGER},
      </if>
      <if test="capitalNotifyStatus != null">
        capital_notify_status = #{capitalNotifyStatus,jdbcType=TINYINT},
      </if>
      <if test="thirdNotifyStatus != null">
        third_notify_status = #{thirdNotifyStatus,jdbcType=TINYINT},
      </if>
      <if test="cutAmount != null">
        cut_amount = #{cutAmount,jdbcType=DECIMAL},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wjq.order.model.mobile_card.MccConsumeRepayment">
    update mobile_card..mcc_consume_repayment
    set history_is_overdue = #{historyIsOverdue,jdbcType=INTEGER},
      overdue_amount = #{overdueAmount,jdbcType=DECIMAL},
      overdue_day = #{overdueDay,jdbcType=INTEGER},
      periods = #{periods,jdbcType=INTEGER},
      real_amount = #{realAmount,jdbcType=DECIMAL},
      remain_amount = #{remainAmount,jdbcType=DECIMAL},
      should_amount = #{shouldAmount,jdbcType=DECIMAL},
      should_date = #{shouldDate,jdbcType=DATE},
      repayment_status = #{repaymentStatus,jdbcType=INTEGER},
      consume_id = #{consumeId,jdbcType=BIGINT},
      end_date = #{endDate,jdbcType=TIMESTAMP},
      play_status_id = #{playStatusId,jdbcType=INTEGER},
      capital_notify_status = #{capitalNotifyStatus,jdbcType=TINYINT},
      third_notify_status = #{thirdNotifyStatus,jdbcType=TINYINT},
      cut_amount = #{cutAmount,jdbcType=DECIMAL}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>