package com.wjq.algorithm.divide;

/**
 *输出前K大的数字
 *
 * 给定一个数组，统计前K大的数，并且把这k个数从大到小输出。
 *
 * 输入
 * 第一行包含一个整数n，表示数组的大小。n < 100000。
 * 第二行包含n个整数，表示数组的元素，整数之间以一个空格分开。每个整数的绝对值不超过100000000。
 * 第三行包含一个整数k。k < n。
 * 输出
 * 从大到小输出前k大的数，每个数一行。
 * 样例输入
 * 10
 * 4 5 6 9 8 7 1 2 3 0
 * 5
 * 样例输出
 * 9
 * 8
 * 7
 * 6
 * 5
 *
 * 解题思路
 * 结合快排的思想
 * 在数组中 对于a[0],可以分别出 大于或小于 a[0] 的数组
 * 如果 大于a[0] 的 个数 >k 则再对大于数组做取前k大数字
 * 否则从 小于a[0] 的数组再取 k->a[0] 个数
 *
 * f(a[0],start,end,k)
 *
 *
 *
 * @author wangjianqiang24
 * @date 2020/11/4
 */
public class BigK {

	public static void main(String[] args) {
		int a[] = new int[]{9040,2069,-8439,6306,-3886,-7194,-4715,4579,696,6410,7088,-8273,-3035,5966,-7155,-2483,-7384,8504,3035,-3565,8524,-8458,-62,6723,1243,-2498,-8003,173,3940,4951,-303,2712,5787,-7630,4694,346,-7666,-8180,-1516,-2253,4092,3193,1926,-3928,5038,-2994,-1366,-437,-7252,2721,109,2143,-3927,-6900,6650,-4492,8670,-80,-9095,6372,-9865,-2637,-3050,5052,-1344,804,-5573,7144,-8625,376,-190,5996,238,-112,3626,-877,8092,828,8274,2714,1229,5064,6639,5437,-5541,9177,-58,-3231,-4476,5377,-3800,8031,7854,-1065,4370,890,-382,1452,-542,-9156,-154,5109,-7767,-4373,-3022,-6613,-6152,6221,-3096,-6560,-9848,-9015,-8553,9337,-5000,-5816,-6659,-4738,-7847,4624,9568,-4260,-3851,-164,-8886,8575,8772,5250,2243,-8899,7321,-9850,1989,-224,-1103,5128,705,-7842,-2666,317,3001,9202,8974,-6314,-7975,-7908,-2516,-301,-9264,2836,-9915,-347,4142,9185,-1510,-1460,1963,2277,-9033,-4032,2579,2625,4179,9135,410,-2168,-9381,632,-2099,5878,-441,-5445,6158,1448,-637,2498,5304,4934,-8743,7039,1947,7763,8079,-5441,5803,7744,-3063,2716,-8424,-9270,4324,3764,520,-5018,9413,-397,-2143,6235,-7788,1930,-7894,5230,4482,-2258,3209,9602,1043,3482,-2649,2686,-942,1851,3198,-7815,-2289,-13,-2525,-9138,-3896,-5460,8494,6944,-2990,-677,-8933,-5995,5684,135,-1091,6654,4963,-5443,6610,-9838,-3784,8635,-2363,-6264,1468,106,-9750,6805,-1053,2672,8801,-7422,2159,6460,1539,-9548,-1034,5931,-2918,-516,-6685,6789,-1011,5482,9324,8248,-9411,-6450,1013,8506,9719,2771,-119,-1506,-6021,-242,5177,1010,9920,-9874,6357,3722,-8314,7860,2259,-3290,-3208,-4935,-7127,-7064,-90,-9239,735,8060,4866,-636,6458,-6375,2715,-466,7402,9062,488,-7269,2003,-3200,-8275,-8264,8988,174,-4863,5903,-115,2360,912,-9835,1869,-312,3089,2459,2758,-2029,6723,9766,6554,-113,-6304,-9817,-6377,4830,-5198,-6531,-7213,-6933,9245,3898,5792,-6814,39,7697,-7098,3572,-2499,6734,-9614,2592,1725,1239,174,3752,7863,9787,7879,9684,-4870,3025,9765,-7054,-8613,-3587,5381,-3859,-2677,8374,-2728,1350,-3061,-8865,-9968,-1268,-7634,6849,-8957,2146,4422,-8350,3635,4067,-621,508,-1847,-4290,7344,5912,7767,3225,7988,8823,3569,4621,-6429,-2936,31,-8429,1675,5546,7182,1338,1464,2796,9065,-2602,9752,4995,-8987,8297,1157,-3220,-8270,2126,-4805,-8115,-5601,4282,-3167,-106,-1663,9518,8906,1930,5236,6122,5564,2786,-9430,-5704,-2244,190,-3512,6117,724,8305,8518,9588,6303,-6513,6365,6198,2790,2267,-3590,-5412,7977,-8942,875,-322,9239,7780,-8924,7906,-6844,5600,393,3944,-1599,-2850,-7169,8321,7513,-87,7962,524,-1052,1212,8378,-4292,-3879,-8939,-8187,-2406,-6189,5606,3531,3885,-3676,9110,6191,-3546,-8503,4772,9487,1148,6079,-1940,2970,-2820,5350,-9311,669,3175,240,9310,3053,6158,2462,-216,6754,3799,2914,-2564,-61,4199,8715,-881,1393,-1548,4689,7957,-8157,-9855,-5717,-7330,-6748,-453,-7933,5644,578,4430,5291,-7713,3535,9495,-769,633,-3436,-954,6573,-3000,8180,-17,3808,-2959,-1648,-5735,-6399,9344,2206,1736,-1681,-4128,-7771,5369,5832,4124,1097,-6398,-1573,-7651,5650,-4302,5959,8139,-1559,-4822,5480,-2713,-7230,-7901,-635,-2522,4311,-6068,-1872,7304,-1597,-5030,-253,3427,-5444,-9521,1404,-9079,-4913,-2980,-8792,-4586,-7193,-8421,-7067,-2166,-7211,4074,-21,6367,-7208,-4196,-9762,6933,1805,664,4494,-9028,-402,5656,-555,-9534,1803,842,6654,-6757,-8856,-2287,-8588,1177,9326,3142,1781,-9342,-1098,-9801,-1934,-7545,3213,6968,7896,-9085,-5983,-6425,-181,9025,5971,4074,4802,-2048,5391,2258,-1356,9007,8407,3643,3228,-3813,-9438,6308,-341,-8162,8302,3566,-9851,5949,-4497,-8824,-3662,-4844,9757,-1619,9571,6559,-520,-5195,3336,-792,5812,5395,-5435,-325,8313,9585,-7050,-4006,2102,-5690,801,-1446,-7390,4315,-5350,-3467,-7345,-6988,7457,-5709,-3604,-3600,-5960,-3132,6640,-7677,1316,8544,8999,-8127,-1207,5270,-8400,-8894,-50,-9858,2632,-9498,-7230,9034,-8455,2683,7982,-6788,347,7764,3443,3129,873,7753,-3737,-3381,-4745,8932,3679,953,5429,745,2264,1938,3876,9860,-9958,9508,3944,202,933,-939,7928,1101,-871,5264,6004,-6502,-3136,-8805,-5035,7177,9176,-2683,-1722,1946,7321,4869,-9003,-5815,4374,3632,-8001,8366,7162,6973,3167,-5403,-3194,-8295,5559,-7614,-1270,4908,-3063,-3355,-9395,-9129,-8176,1647,9778,-7593,6860,-3238,8771,3902,-6037,9839,-8184,7769,-8814,1171,-5428,2244,-1638,-1178,6640,-4072,-7040,1898,-4215,7270,-4961,6647,-4892,8928,5840,3053,-6496,5658,-8398,5255,-3298,-8250,-6296,-4497,8778,3719,-7064,4479,-1873,-4212,-1510,-4567,2503,-4287,840,6409,4052,-1964,7727,-690,-5085,6302,8803,-2389,2928,-9385,-3662,-3362,-2487,-9649,-1349,-114,-818,-7302,9654,-8526,1030,-1606,-3915,2307,-2514,3066,5909,9825,-5825,7188,-2227,5165,5166,-541,4299,-6969,7019,5220,9023,-3960,-3416,-7703,5576,-9702,926,-8492,-6739,-656,-5115,-5904,2152,5832,-6477,7509,6949,4285,-1245,-5083,206,-2397,2560,-2207,3252,-9344,-4313,-7638,-6487,4546,3621,5642,-6769,-8445,1578,-3540,3841,3391,7509,6893,-3938,5821,9714,-5964,2614,-8334,-6550,-7380,7629,3793,-6820,-7628,8646,7376,-7249,-5487,2719,-22,-2105,9173,-2664,5331,825,583,-3691,-6651,5301,-5130,-609,-298,9034,-852,7946,-4859,-4897,-6563,-5402,7227,7947,8315,-870,-5137,-2980,-5204,3624,-5101,-6679,-4698,-8112,-8927,2468,2571,310,9588,1390,9179,8340,1707,3820,-9663,-3967,5166,9948,-7987,4720,-8395,-1691,-3054,-6911,1054,4685,-680,5753,-8583,-3437,8609,5956,-6216,-8391,699,-7476,9792,-2736,6971,495,6841,360,-668,260,1505,9262,26,6691,-1720,8846,791,-3912,6367,5311,6502,-6243,2528,-4999,5369,-4520,8621,-2075,-24,-4041,-2588,-454,8882,-6487,9481,-9125,-9320,9727,8501,-9228,5319,2909,9621,-9973,-8560,-6674,2113,-4316,6468,7390,7462,5174,1863,-5190,6837,6622,-3447,8265,-7221,-27,-7398,-2271,3278,-5073,6305,-7654,9575,-9767,-427,-8602,-3734,-8943,-3177,-2545,4049,-8911,-8703,4816,9329,308,-9254,-7820,-7174,-4529,-482,9182,-2528,1495,3660,-8854,-7337,-7496,-5283,-5652,51,-2700,-3584,1143,-4836,-7161,-3866,7223,-9227,5817,-8780,-5908,87,6880,5021,8212,-8062,-5572,-7675,7358,7169,2331,7315,5236,6381,-1591,-4300,-8301,-8167,-1289,6258,4178,-5082,95,7648,7952,-7919,1317,-8549,2813,211,3984,1683,-8464,-7049,-5123,-7577,-3144,7082,-4985,3529,-8167,-1255,4161,-8781,8660,-2242,-1008,985,2286,-2091,-536,-7284,6528,9146,8221,-3955,6527,-2866,4133,955,-464,586,7595,6888,-3932,571,-3494,2832,8292,-7403,-3151,4400,3288,-3763,7616,-9733,8894,8020,4472,6476,7768,-2415,8517,-2862,-8344,-1688,5006,-779,3158,3888,-1400,1717,5159,-1493,6229,628,4648,5285,-9113,9836,-3357,7948,-3858,-2245,6331,-4432,-8739,-9026,3929,768,7516,-5785,-6309,7742,-9664,-5207,8853,-3904,-9383,-2238,-2309,2531,3624,-6636,-4366,-9597,-8946,542,-3262,4916,-2664,1809,-2271,-4864,-394,-459,-6967,490,1518,-1428,5087,-1746,9740,2654,1298,-4189,-4542,3527,8748,-2590,-7948,-714,4069,-4445,5607,2466,-6577,5819,-1012,865,6097,5738,5532,-8688,2436,-1596,2362,-8921,-8127,424,-4901,-8742,8994,2862,-8762,-4596,3616,583,1961,7207,-3825,-1971,-7453,6783,6065,-2895,553,-8213,5904,878,2212,-8974,5393,-4790,6242,9388,7771,2783,658,-7558,4790,9557,-526,-1922,3886,-9584,8990,-5817,-5182,-3536,8674,-790,-1157,-4169,2598,-3366,-2015,4936,-7549,8474,-9664,2735,-341,-103,3898,-1654,-6744,-3653,6938,5359,-1070,4830,8814,-3788,8871,6947,2228,2355,-4941,2803,4530,3581,-2500,1102,-9068,-5708,-1799,-7730,4747,6400,4739,2048,-4910,2795,-1364,-7715,2510,-7201,-2420,5598,-7472,1312,7493,-4579,-2760,4217,4395,-8599,9725,3228,5921,5667,-7548,-3545,970,800,1987,-5244,-9034,-8233,-1321,537,4724,9186,1207,-5143,5296,9986,4303,3557,-7968,-1116,6782,-4600,7626,5610,-4441,3689,236,4591,-8157,-3704,9958,8778,5005,1451,5181,7573,1805,-2403,3375,2442,7062,198,-1837,-9176,-3057,-6512,68,-9698,8000,-6846,4452,6922,-7304,840,6193,-8023,-1140,1280,1690,3872,-3453,8736,-2372,2904,-2560,3520,6703,-7009,-913,-3110,7108,8490,-2684,-3754,1659,-2989,9458,5933,4830,3439,-5427,-821,-6746,-1508,4736,-364,21,-3599,-2211,-7742,4018,4105,4463,5368,3907,5839,3436,-6811,-2771,7918,497,-1543,-46,5937,-8448,-9191,4980,2060,4973,9328,9428,-7635,-2764,9705,-1287,4798,-737,7579,8290,3152,-6772,7835,6377,343,-1908,3336,-7052,-448,-732,-5660,-4745,7464,4847,-8097,348,4035,-5390,-9696,3998,-9737,2637,-1229,-9359,218,-7113,-1283,2193,9803,-607,-1980,3985,-1218,8744,-6432,-3087,-1979,9247,-4231,-80,-8600,-8684,-3691,1504,9741,8888,-2502,-9232,-7369,2722,8971,-4198,-2000,-1089,2345,2300,-1213,9178,2980,-6607,-2535,7676};
		f(a,0,a.length-1,66);
		for (int i = 0;i < 5;i++){
			System.out.println(a[a.length-1-i]);
		}
	}


	static void f(int[] a, int start, int end, int k) {

		if (start < end) {
			int base = a[start];
			int i = start;
			int j = end;
			while (i < j) {
				while (a[j]>base && i<j){
					j--;
				}

				if (i < j)
					a[i++] = a[j];
				while (a[i] <= base && i<j){
					i++;
				}
				if (i < j)
					a[j--] = a[i];
			}
			a[i] = base;
			if (end - i >= k) {
				f(a, i+1, end, k);
			}
			else {
				f(a, start, i, k - (end - i));
				f(a,i+1,end,end-i);
			}

		}

	}

}
